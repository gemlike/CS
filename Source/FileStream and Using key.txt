using System;
using System.Data.Common;
using System.Net;
using System.Runtime.ExceptionServices;
using System.Runtime.InteropServices.Marshalling;
using System.Runtime.Intrinsics.Arm;
using System.Text;
using System.Collections.Generic;
using System.Linq;
using System.IO;
using System.Collections;
using System.Collections.Immutable;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Security.Cryptography.X509Certificates;
using System.IO.Compression;

namespace NgocThe

{
    public class Product
    {
        public List<string> lst = new List<string>(){"milk","water","orange","apple"};

        public string this[int index]
        {
            get
            {
                return lst[index];
            }
            set
            {
                lst[index] = value;
            }
        }
        public Product(string m0)
        {
            System.Console.WriteLine("Bạn vừa tạo 1 biến Product có tên là " + m0);
            // Bắt buộc biến reOnly phải gán giá trị hoặc khai báo ở hàm tạo
            reOnly = m0;
        }

        public readonly string reOnly;
        ~ Product()
        {
            System.Console.WriteLine("Bạn vừa hủy 1 biến Product");
        }
    }
    class MyVector 
        {
        double x;
        double y;
        public MyVector(double x, double y)
        {
            this.x = x;
            this.y = y;
        }
        public void ShowXY() {
            Console.WriteLine("x = " + x);
            Console.WriteLine("y = " + y);
        }

        public static MyVector operator+(MyVector a, MyVector b)
        {
            MyVector v = new MyVector(0,0);
            v.x = a.x + b.x;
            v.y = a.y + b.y;
            return v;
        }
    }
    public class Test
    {
        static void TestConstructor() {
            Product p = new Product("ABC");  // Tạo đối tượng, biến p tham chiếu đến đối tượng
            // p = null;
            // Biến p gán bằng null, đối tượng tạo ra phía trên,
            // không còn biến nào tham chiếu đến => Nó được đánh dấu
            // sẽ bị thu hồi bởi GC, lúc nào GC chạy do NET quyết định
        }
        static void Main()
        {
            Console.OutputEncoding = Encoding.UTF8;
            
            
            using(FileStream fs = new FileStream(AppDomain.CurrentDomain.BaseDirectory + "/../../../../Source/Type.txt", FileMode.Open))
            {
                byte[] bt = new byte[10000];
                fs.Read(bt, 0, bt.Length);
                List<byte> lstByte = bt.ToList();
                int firstZero = lstByte.FindIndex(o => o == 0);
                lstByte.RemoveRange(firstZero, lstByte.Count - firstZero);
                bt = lstByte.ToArray();
                string result = Encoding.UTF8.GetString(bt);
                System.Console.WriteLine(result);
            }

            MyVector a = new MyVector(1,2);
            MyVector b = new MyVector(2.1,3.4);
            MyVector v = a + b;
            v.ShowXY();

            Console.ReadKey();
        }
    }

}